name: Django App CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
      - name: Check formatting with black
        run: black --check .
        
      - name: Check imports with isort
        run: isort --check-only --profile black .

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-django coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Run tests with coverage
        env:
          DATABASE_URL: postgres://django_user:django_password@localhost:5432/django_db
          DEBUG: "True"
          SECRET_KEY: "github-actions-test-key"
        run: |
          coverage run -m pytest
          coverage report
  
  build_and_push:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    # Only run on main branch push, not PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Django image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/django/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/django-app:latest
          
      - name: Build and push Nginx image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/django-nginx:latest